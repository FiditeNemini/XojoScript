name: CI – XojoScript + Plugins

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # === Linux ===
      - name: Install system deps (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libffi-dev libcurl4-openssl-dev libboost-all-dev

      # === macOS ===
      - name: Install system deps (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install gcc libffi curl boost

      # === Windows ===
      - name: Set up MSYS2 & MinGW‑w64 (Windows)
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >
            mingw-w64-x86_64-toolchain
            libffi
            libcurl
            boost

      - name: Configure PATH for MinGW‑w64 (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "##[set-env name=MSYS2]${{ env.MSYS2 }}"
          echo "##[add-path]${{ env.MSYS2 }}\mingw64\bin"

      - name: Verify g++ (Windows)
        if: runner.os == 'Windows'
        run: g++ --version

      # === Rust (all platforms) ===
      - name: Install Rust toolchain
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env
          rustup default stable

      # === Make build scripts executable ===
      - name: Make scripts executable (macOS/Linux)
        if: runner.os != 'Windows'
        run: chmod +x build_xojoscript.sh build_plugins.sh

      # === Build on Linux/macOS ===
      - name: Build on Linux/macOS
        if: runner.os != 'Windows'
        run: |
          ./build_xojoscript.sh --arch 64bit --project XojoScript.xojo_project --out build/XojoScript-${{ matrix.os }}-64bit
          ./build_plugins.sh   --arch 64bit --out build/plugins-${{ matrix.os }}

      # === Build on Windows ===
      - name: Build on Windows
        if: runner.os == 'Windows'
        shell: bash --login -i
        run: |
          # Use MinGW‑w64 g++ for both scripts
          export PATH="${MSYS2}/mingw64/bin:$PATH"
          ./build_xojoscript.bat --arch 64bit --project XojoScript.xojo_project --out build/XojoScript-windows-64bit
          ./build_plugins.bat   --arch 64bit --out build/plugins-windows

      # === Upload artifacts ===
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }} 64‑bit builds
          path: build/**

      # === Optional Rust check ===
      - name: Rust build-check (optional)
        run: |
          pushd plugins-src
          cargo check
          popd
